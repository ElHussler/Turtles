---DESIGN---
Functional/Technical aspects, Implementation details of:
1) Opponent detection			- Green hat recognition, Searching, Last-known location
						 (TODO: Fix jerky course corrections, buffer img?
							Only rotate twice (Odom???), then Mapping)
2) Obstacle avoidance			- 	 (TODO: DEBUG LASERSCAN)
3) Player behaviour (attack/escape)	- Attack (TODO: LaserScan to stop from hitting prey)
4) "Choice of relevant parameters"	- Linear/Angular Speeds, search rotation amount?
5) Additional functionality		- 	 (TODO: Add functions from 'Extra' section below)

---CODE IMPLEMENTATION---
1) Well-commented and structured code	-	 (TODO: Add adequate comments)

---TESTING---
1) Functionality (efficient implementation)
2) Performance (time/distance accuracy)
3) System limitations
4) Possible improvements
5) Influence of system parameters

---REPORT---
2500 words covering:
1) Design
2) Evaluation
3) References (Textbooks, Websites)

---DEMO---
1) Structured
2) Well-prepared
3) Highlight additional features

---EXTRA---
1) Advanced object detection
	-Colour-based learning
	-Extra visual cues
	-Multi-object handling
	-Localisation
2) Behaviour coordination
	-Finite State Machine
3) Predator AND Prey
4) Spatial awareness
	-Analysis of hiding places


TO-DO:
1) Implement AND DEBUG LaserScans
	- Obstacle Avoidance
	- Prevent Predator from hitting prey
?) Limit search rotations to 2 for efficiency
	- Next step is implementing Mapping and traversing blind spots
?) Fix jerky course corrections
	- Set up buffer image of middle columns, if blob is within buffer, don't post Twist message
